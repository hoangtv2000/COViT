trainer:
  cwd: C:/Users/ASUS/COVID_19 # working directory
  epochs: 30 # number of training epochs
  seed: 1234 # randomness seed
  cuda: True # use nvidia gpu
  gpu: 0 # id of gpu
  load: True # load pretrained checkpoint
  epoch_patience: 7 # Patience for early stopping
  pretrained_pvt_v2_cpkt: /model/pvt_v2_b2_li.pth
  pretrained_vit_cpkt: /model/B_16.pth

  log_interval: 1000 # Print statistics every n samples.

  model_ViT:
    name: ViT # model name
    optimizer: # optimizer configuration
      type: AdamW # optimizer type
      lr: 1e-3 # learning rate
      weight_decay: 1e-4 # weight decay
    scheduler: # learning rate scheduler
      type: ReduceLRonPlateau # type of scheduler
      scheduler_factor: 0.9 # learning rate change ratio
      scheduler_patience: 1 # patience for some epochs
      scheduler_min_lr: 2e-3 # minimum learning rate value
      scheduler_verbose: True # print if learning rate is changed

  model_PVT_V2:
    name: PVT_V2 # model name
    optimizer: # optimizer configuration
      type: AdamW # optimizer type
      lr: 1e-4 # learning rate
      weight_decay: 1e-3 # weight decay
    scheduler: # learning rate scheduler
      type: ReduceLRonPlateau # type of scheduler
      scheduler_factor: 0.9 # learning rate change ratio
      scheduler_patience: 1 # patience for some epochs
      scheduler_min_lr: 2e-3 # minimum learning rate value
      scheduler_verbose: True # print if learning rate is changed

  dataloader:
    train:
      batch_size: 8 # batch size
      shuffle: True # shuffle samples after every epoch
      num_workers: 4 # number of thread for dataloader
    val:
      batch_size: 8 # batch size
      shuffle: True # shuffle samples after every epoch
      num_workers: 4
    test:
      batch_size: 1
      shuffle: False
      num_workers: 2

  dataset:
    input_data: C:/Users/ASUS/COVID_19/data
    name: COVIDXR_dataset
    type: multi_target
    num_classes: 3
    class_dict: {'pneumonia': 0, 'normal': 1, 'COVID-19': 2}
    dim: (224,224) # image dimension
    train:
      augmentation: True # do augmentation
    val:
      augmentation: False
    test:
      augmentation: False
